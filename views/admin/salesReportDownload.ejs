<%- include("../../views/partials/admin/header") %>

<div class="container mt-5">
    <h2 class="text-center mb-4">Sales Report</h2>

    <!-- Filter Options -->
    <div class="card mb-4 shadow">
        <div class="card-header bg-primary text-white">
            <h4 class="mb-0">Generate Sales Report</h4>
        </div>
        <div class="card-body">
            <form id="salesReportForm" action="/admin/generateSalesReport" method="POST" class="row g-3">
                <!-- Start Date -->
                <div class="col-md-4">
                    <label for="startDate" class="form-label">Start Date:</label>
                    <input type="date" id="startDate" name="startDate" class="form-control" required>
                </div>

                <!-- End Date -->
                <div class="col-md-4">
                    <label for="endDate" class="form-label">End Date:</label>
                    <input type="date" id="endDate" name="endDate" class="form-control" required>
                </div>

                <!-- Filter Options -->
                <div class="col-md-4">
                    <label for="filter" class="form-label">Filter:</label>
                    <div class="btn-group w-100" role="group" aria-label="Filter Options">
                        <button type="button" class="btn btn-outline-primary filter-btn">1 Day</button>
                        <button type="button" class="btn btn-outline-primary filter-btn">1 Week</button>
                        <button type="button" class="btn btn-outline-primary filter-btn">1 Month</button>
                        <button type="button" class="btn btn-outline-primary filter-btn">1 Year</button>
                    </div>
                </div>                

                <!-- Submit Button -->
                <div class="col-12 text-end">
                    <button type="submit" class="btn btn-success px-4">Generate Report</button>
                </div>
            </form>
        </div>
    </div>
</div>


<!-- Report Content Wrapper -->
<div id="reportContent" style="padding-top: 30px;">
    <div class="report-info mb-3 text-center">
        <% if (filter) { %>
            <p class="text-muted fs-4">
                <span class="fw-bold">Sales Report Filter:</span>
                <span class="text-primary fs-4"><%= filter %></span>
            </p>
        <% } else if (startDate && endDate) { %>
            <p class="text-muted fs-4">
                <span class="fw-bold">Sales Report Date Range:</span>
                <span class="text-success fs-4"><%= startDate %></span> 
                <span class="fw-bold text-dark fs-4">to</span> 
                <span class="text-success fs-4"><%= endDate %></span>
            </p>
        <% } %>
    </div>
    
    
    <!-- Overall Stats -->
    <div class="row mb-4">
        <div class="col-md-4">
            <div class="card shadow-sm text-center border-0">
                <div class="card-body">
                    <h5 class="card-title text-primary mb-2">Overall Sales Count</h5>
                    <p id="overallSalesCount" class="display-6 text-secondary"><%= overallSalesCount || 0 %></p>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card shadow-sm text-center border-0">
                <div class="card-body">
                    <h5 class="card-title text-success mb-2">Overall Order Amount</h5>
                    <p id="overallOrderAmount" class="display-6 text-secondary">INR <%= overallOrderAmount ? overallOrderAmount.toFixed(2) : '0.00' %></p>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card shadow-sm text-center border-0">
                <div class="card-body">
                    <h5 class="card-title text-danger mb-2">Overall Discount</h5>
                    <p id="overallDiscount" class="display-6 text-secondary">INR <%= overallDiscount ? overallDiscount.toFixed(2) : '0.00' %></p>
                </div>
            </div>
        </div>
    </div>

    <!-- Orders Table -->
    <div class="table-responsive">
        <table class="table table-bordered">
            <thead class="thead-light">
                <tr>
                    <th>Order ID</th>
                    <th>User</th>
                    <th>Ordered Items</th>
                    <th>Total Price</th>
                    <th>Discount</th>
                    <th>Final Amount</th>
                    <th>Status</th>
                    <th>Payment Method</th>
                    <th>Date</th>
                </tr>
            </thead>
            <tbody>
                <% orders.forEach(order => { %>
                    <tr>
                        <td><%= order.orderId %></td>
                        <td><%= order.user ? order.user.name : 'No User' %></td>
                        <td>
                            <ul class="list-unstyled">
                                <% order.orderedItems.forEach(item => { %>
                                    <li>
                                        Product: <%= item.product.productName %><br>
                                        Size: <%= item.size %>, Quantity: <%= item.quantity %>, Price: INR <%= item.price.toFixed(2) %>
                                    </li>
                                <% }) %>
                            </ul>
                        </td>
                        <td>INR <%= order.totalprice.toFixed(2) %></td>
                        <td>INR <%= order.discount.toFixed(2) %></td>
                        <td>INR <%= order.finalAmount.toFixed(2) %></td>
                        <td><%= order.status %></td>
                        <td><%= order.paymentMethod %></td>
                        <td><%= order.createdOn %></td>
                    </tr>
                <% }) %>
            </tbody>
        </table>
    </div>
</div>

<!-- Download Buttons Container -->
<div class="d-flex justify-content-end align-items-center gap-2">
    <button class="btn btn-outline-primary" type="button" onclick="downloadPDF()">Download PDF</button>
    <button class="btn btn-outline-success" type="button" onclick="downloadExcel()">Download Excel</button>
</div>



<%- include("../../views/partials/admin/footer") %>

    <script>
    function downloadPDF() {
    const { jsPDF } = window.jspdf;
    const doc = new jsPDF();
    const content = document.getElementById('reportContent');

    html2canvas(content).then(canvas => {
        const imgData = canvas.toDataURL('image/png');
        const imgWidth = 190; // Adjust to fit page width
        const pageHeight = 297; // A4 size in mm (portrait)
        const imgHeight = (canvas.height * imgWidth) / canvas.width;

        // Check if content exceeds one page, add pages if necessary
        let heightLeft = imgHeight;
        let position = 10;

        doc.addImage(imgData, 'PNG', 10, position, imgWidth, imgHeight);
        heightLeft -= pageHeight;

        while (heightLeft >= 0) {
            position = heightLeft - imgHeight;
            doc.addPage();
            doc.addImage(imgData, 'PNG', 10, position, imgWidth, imgHeight);
            heightLeft -= pageHeight;
        }

        doc.save("Sales_Report.pdf");
    });
}

function downloadExcel() {
    const table = document.getElementById('reportContent'); // Assume 'reportContent' contains a table or similar structure
    const rows = [];
    
    // Extract table headers
    const headers = Array.from(table.querySelectorAll('thead th')).map(th => th.textContent.trim());
    rows.push(headers);

    // Extract table rows
    const dataRows = Array.from(table.querySelectorAll('tbody tr'));
    dataRows.forEach(row => {
        const rowData = Array.from(row.querySelectorAll('td')).map(td => td.textContent.trim());
        rows.push(rowData);
    });

    // Create a new workbook and worksheet
    const workbook = XLSX.utils.book_new();
    const worksheet = XLSX.utils.aoa_to_sheet(rows);
    XLSX.utils.book_append_sheet(workbook, worksheet, "Sales Report");

    // Export the workbook as an Excel file
    XLSX.writeFile(workbook, "Sales_Report.xlsx");
}


document.addEventListener('DOMContentLoaded', function () {
    const form = document.getElementById('salesReportForm');
    const filterButtons = document.querySelectorAll('.filter-btn'); // Updated selector
    let selectedFilter = null;

    // Function to submit report request
    function submitReportRequest() {
        const startDate = document.getElementById('startDate').value;
        const endDate = document.getElementById('endDate').value;

        // Check if either a filter or date range is selected
        if (!selectedFilter && (!startDate || !endDate)) {
            console.error("Please provide either a filter or a valid date range.");
            return;
        }

        // Prepare the data to send to the backend
        const data = {
            startDate: startDate || null,
            endDate: endDate || null,
            filter: selectedFilter || null
        };

        // Send data to the backend using fetch
        fetch('/admin/generateSalesReport', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(data),
        })
        .then(response => response.json())
        .then(data => {
            if (data.redirectUrl) {
                window.location.href = data.redirectUrl; // Redirect to the report page
            } else {
                // Update the displayed data if needed
                document.getElementById('overallSalesCount').textContent = data.overallSalesCount || 0;
                document.getElementById('overallOrderAmount').textContent = `INR ${data.overallOrderAmount.toFixed(2) || '0.00'}`;
                document.getElementById('overallDiscount').textContent = `INR ${data.overallDiscount.toFixed(2) || '0.00'}`;
            }
        })
        .catch((error) => {
            console.error('Error:', error);
        });
    }

    // Listen for form submission
    form.addEventListener('submit', function (e) {
        e.preventDefault();
        selectedFilter = null; // Clear any filter if dates are chosen
        submitReportRequest();
    });

    // Listen for filter button clicks
    filterButtons.forEach(button => {
        button.addEventListener('click', (e) => {
            e.preventDefault();
            selectedFilter = button.textContent.trim(); // Set selected filter
            document.getElementById('startDate').value = ''; // Clear start date
            document.getElementById('endDate').value = ''; // Clear end date
            submitReportRequest();
        });
    });
});

    </script>